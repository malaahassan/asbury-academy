import React, { useState, useRef, useEffect } from 'react';

function MyAttachment({file, fileInputRef, remove, ready, accept, onAlert, onError}) {
    const [postDoc, setPostDoc] = useState(null);
    const fileUploadPath = useRef(null);
    const [fileUploadStroke, setFileUploadStroke] = useState(296.38525);
    const [fileUploaded, setFileUploaded] = useState(false);
    const attachmentTimeout = useRef();

    useEffect(() => {
        handleDocumentInput();
    }, []);

    function setError(param){
      onError(param);
      handleRemove();
    }

    function setAlert(param){
      onAlert(param);
      handleRemove();
    }

    function handleRemove(){
      remove();
      fileInputRef.current.value = "";
    }
    

    function splitFileName(fileName) {
        // Find the last index of a dot in the filename
        const lastDotIndex = fileName.lastIndexOf('.');
    
        // If no dot is found or the dot is the first character (hidden files), return the entire filename as name and an empty string as extension
        if (lastDotIndex === -1 || lastDotIndex === 0) {
            return { name: fileName, extension: '' };
        }
    
        // Split the filename into name and extension
        const name = fileName.substring(0, lastDotIndex);
        const extension = fileName.substring(lastDotIndex + 1);
    
        return { name, extension };
    }
    
      function formatBytes(bytes, decimals = 2) {
        if (bytes === 0) return '0 Bytes';
    
        const k = 1024;
        const dm = decimals < 0 ? 0 : decimals;
        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
    
        const i = Math.floor(Math.log(bytes) / Math.log(k));
    
        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
      }


    function handleDocumentInput(){
        
        if(!accept.includes((splitFileName(file.name).extension)) && 40 * 1024 * 1024 < file.size){
          setAlert([`Document size exceeds the maximum limit (40MB).` ,`Invalid file extension type (allowed extenstions are ${accept.map((extension)=> ` .${extension}`)}).`]);
          return false;
        } else if(!accept.includes((splitFileName(file.name).extension))){
          setAlert([`Invalid file extension type (allowed extenstions are ${accept.map((extension)=> ` .${extension}`)}).`]);
          return false;
        } else if(40 * 1024 * 1024 < file.size){
          setAlert([`Document size exceeds the maximum limit (40MB).`]);
          return false;
        }
        clearTimeout(attachmentTimeout.current);
        setPostDoc(file);
        setFileUploaded(false);
        setFileUploadStroke(296.38525);
        const formData = new FormData();
        formData.append('file', file);
        
        const xhr = new XMLHttpRequest();
        xhr.upload.onprogress = function(event) {
          if (event.lengthComputable) {
              let percentComplete = (event.loaded / event.total) * 100;
              let stroke = 338.726 - (338.726*((event.loaded / event.total) - 0.25) ); 
              if(stroke > 296.38525){
                stroke = 296.38525;
              }
              
              if(percentComplete != 100){
                setFileUploadStroke(stroke);
              }
  
          } else {
            stroke = 296.38525;
            setFileUploadStroke(stroke);
          }
        };
        xhr.open("POST", "/back/upload_file.php");
        xhr.send(formData);
        xhr.onerror = () => attachmentTimeout.current = setTimeout( ()=>handleDocumentInput(), 2000);
        xhr.onload = function(){
          if(xhr.status == 200){
            try {
              let response = JSON.parse(xhr.responseText);
              if(response.errors.length <= 0){
                fileUploadPath.current = {id: response.id, path: response.path, name: splitFileName(file.name).name};
                let timer = setTimeout(function(){
                  let timer2 = setTimeout(function(){
                    ready(fileUploadPath.current);
                    setFileUploaded(true);
                    clearTimeout(timer2);
                  }, 310);
                  setFileUploadStroke(0);
                  clearTimeout(timer);
                }, 500);
              } else {
                setAlert(response.errors);
              }
            } catch(err) {
                setError({retry: handleDocumentInput, error: "parse", message: `ON_CATCH ${xhr.status}`});
            }
            
          } else {
            setError({error: "connection", message: `ON_NOT_200 ${xhr.status}`});
          }
        }
        fileInputRef.current.value = "";
  
    }

    function handleDocumentRemove(){
      clearTimeout(attachmentTimeout.current);
      handleRemove();
    }

    function handleErrorRemove(){
      setError({error: null, message: null});
      handleDocumentRemove();
    }
    
    
  return (
    <>
        <div className="my-post-attachment-container my-post-inside-container" style={{display: postDoc ? "flex" : "none", cursor: "auto"}}>
        <button className="my-post-image-remove-button" onClick={handleDocumentRemove}  style={{display: fileUploaded ? "flex" : "none"}}>
          <svg clipRule="evenodd" fillRule="evenodd" strokeLinejoin="round" strokeMiterlimit="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="m4.015 5.494h-.253c-.413 0-.747-.335-.747-.747s.334-.747.747-.747h5.253v-1c0-.535.474-1 1-1h4c.526 0 1 .465 1 1v1h5.254c.412 0 .746.335.746.747s-.334.747-.746.747h-.254v15.435c0 .591-.448 1.071-1 1.071-2.873 0-11.127 0-14 0-.552 0-1-.48-1-1.071zm14.5 0h-13v15.006h13zm-4.25 2.506c-.414 0-.75.336-.75.75v8.5c0 .414.336.75.75.75s.75-.336.75-.75v-8.5c0-.414-.336-.75-.75-.75zm-4.5 0c-.414 0-.75.336-.75.75v8.5c0 .414.336.75.75.75s.75-.336.75-.75v-8.5c0-.414-.336-.75-.75-.75zm3.75-4v-.5h-3v.5z" fillRule="nonzero"/></svg>

        </button>
        <div className="my-post-attachment-icon-container">
          <div className="my-post-image-loading my-post-file-loading" style={{display: fileUploaded ? "none" : "flex"}}>
            <svg width="130" height="130" viewBox="0 0 120 120">
              <circle cx="60" cy="60" r="54" className="background-circle"></circle>
              <circle cx="60" cy="60" r="54" className="loading-circle" strokeLinecap="butt" style={{strokeDashoffset: fileUploadStroke}}></circle>
            </svg>
          </div>
          {postDoc && (splitFileName(postDoc.name).extension == "pdf" && <svg style={{opacity: fileUploaded ? "1" : "0.2"}} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 96 96" fill="#FFF" strokeMiterlimit="10" strokeWidth="3">
            <path d="M60.9579,8h-42.688C17.5685,8,17,8.5685,17,9.2698v77.4603C17,87.4315,17.5685,88,18.2698,88h59.6825 c0.7013,0,1.2698-0.5685,1.2698-1.2698V26.2643c0-0.7858-0.3122-1.5395-0.8678-2.0951L63.053,8.8678 C62.4974,8.3122,61.7437,8,60.9579,8z"/>
            <path fill="#979593" d="M79.1211,24.707L61.293,6.8789C60.7266,6.312,59.9736,6,59.1719,6H19c-1.6543,0-3,1.3457-3,3v78 c0,1.6543,1.3457,3,3,3h58c1.6543,0,3-1.3457,3-3V26.8281C80,26.0273,79.6875,25.2739,79.1211,24.707z M60,8.4141L77.5857,26H61 c-0.5518,0-1-0.4482-1-1V8.4141z M77,88H19c-0.5518,0-1-0.4482-1-1V9c0-0.5518,0.4482-1,1-1h39v17c0,1.6543,1.3457,3,3,3h17v59 C78,87.5518,77.5518,88,77,88z"/>
            <path fill="#C8C6C4" d="M71 37H25c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h46c.5523 0 1 .4477 1 1l0 0C72 36.5523 71.5523 37 71 37zM71 43H25c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h46c.5523 0 1 .4477 1 1l0 0C72 42.5523 71.5523 43 71 43zM71 49H25c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h46c.5523 0 1 .4477 1 1l0 0C72 48.5523 71.5523 49 71 49zM71 55H25c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h46c.5523 0 1 .4477 1 1l0 0C72 54.5523 71.5523 55 71 55z"/>
            <path fill="#D65532" d="M66.0467 63.0028l13.9589.0384c1.1046.003 1.9975.9009 1.9945 2.0055l-.0357 12.9589c-.003 1.1046-.9009 1.9975-2.0055 1.9945L66 79.9617c-.5523-.0015-.9988-.4505-.9972-1.0028L65.0439 64C65.0454 63.4477 65.4944 63.0012 66.0467 63.0028zM31 78.9973c0 .5534-.4494 1.0015-1.0027 1l-14.0343-.0384c-1.1069-.003-1.966-.9009-1.9629-2.0055V64.9945c.003-1.1046.9028-1.9975 2.0097-1.9945l13.993.0384c.5512.0015.9973.4488.9973 1V78.9973z"/>
            <path fill="none" stroke="#D65532" strokeLinecap="round" strokeLinejoin="round" d="M58.5,80.5h-21c-1.1046,0-2-0.8954-2-2v-14c0-1.1046,0.8954-2,2-2h21c1.1046,0,2,0.8954,2,2v14 C60.5,79.6046,59.6046,80.5,58.5,80.5z"/>
          </svg>)}
          {postDoc && ((splitFileName(postDoc.name).extension == "doc" || splitFileName(postDoc.name).extension == "docx" || splitFileName(postDoc.name).extension == "odt")  && <svg style={{opacity: fileUploaded ? "1" : "0.2"}} xmlns="http://www.w3.org/2000/svg" fill="#FFF" strokeMiterlimit="10" strokeWidth="2" viewBox="0 0 96 96">
            <path stroke="#979593" d="M67.1716 7H27c-1.1046 0-2 .8954-2 2v78c0 1.1046.8954 2 2 2h58c1.1046 0 2-.8954 2-2V26.8284c0-.5304-.2107-1.0391-.5858-1.4142L68.5858 7.5858C68.2107 7.2107 67.702 7 67.1716 7z"/>
            <path fill="none" stroke="#979593" d="M67 7v18c0 1.1046.8954 2 2 2h18"/>
            <path fill="#C8C6C4" d="M79 61H48v-2h31c.5523 0 1 .4477 1 1s-.4477 1-1 1zm0-6H48v-2h31c.5523 0 1 .4477 1 1s-.4477 1-1 1zm0-6H48v-2h31c.5523 0 1 .4477 1 1s-.4477 1-1 1zm0-6H48v-2h31c.5523 0 1 .4477 1 1s-.4477 1-1 1zm0 24H48v-2h31c.5523 0 1 .4477 1 1s-.4477 1-1 1z"/>
            <path fill="#185ABD" d="M12 74h32c2.2091 0 4-1.7909 4-4V38c0-2.2091-1.7909-4-4-4H12c-2.2091 0-4 1.7909-4 4v32c0 2.2091 1.7909 4 4 4z"/>
            <path d="M21.6245 60.6455c.0661.522.109.9769.1296 1.3657h.0762c.0306-.3685.0889-.8129.1751-1.3349.0862-.5211.1703-.961.2517-1.319L25.7911 44h4.5702l3.6562 15.1272c.183.7468.3353 1.6973.457 2.8532h.0608c.0508-.7979.1777-1.7184.3809-2.7615L37.8413 44H42l-5.1183 22h-4.86l-3.4885-14.5744c-.1016-.4197-.2158-.9663-.3428-1.6417-.127-.6745-.2057-1.1656-.236-1.4724h-.0608c-.0407.358-.1195.8896-.2364 1.595-.1169.7062-.211 1.2273-.2819 1.565L24.1 66h-4.9357L14 44h4.2349l3.1843 15.3882c.0709.3165.1392.7362.2053 1.2573z"/>
          </svg>)}
          {postDoc && ((splitFileName(postDoc.name).extension == "ppt" || splitFileName(postDoc.name).extension == "pptx") && <svg style={{opacity: fileUploaded ? "1" : "0.2"}} xmlns="http://www.w3.org/2000/svg" fill="#FFF" strokeMiterlimit="10" strokeWidth="2" viewBox="0 0 96 96">
            <path stroke="#979593" d="M67.1716 7H27c-1.1046 0-2 .8954-2 2v78c0 1.1046.8954 2 2 2h58c1.1046 0 2-.8954 2-2V26.8284c0-.5304-.2107-1.0391-.5858-1.4142L68.5858 7.5858C68.2107 7.2107 67.702 7 67.1716 7z"/>
            <path fill="none" stroke="#979593" d="M67 7v18c0 1.1046.8954 2 2 2h18"/>
            <path fill="#F5BA9D" d="M62 34c8.2843 0 15 6.7157 15 15H62V34z"/>
            <path fill="#C8C6C4" d="M77 51c0 10.0264-8.6799 18.0255-18.9355 16.8929-7.7951-.8609-14.0964-7.1622-14.9574-14.9573C41.9744 42.68 49.9736 34 60 34v17h17zm2 25H34c-.5522 0-1 .4477-1 1s.4478 1 1 1h45c.5522 0 1-.4477 1-1s-.4478-1-1-1zm0-5H34c-.5522 0-1 .4477-1 1s.4478 1 1 1h45c.5522 0 1-.4477 1-1s-.4478-1-1-1z"/>
            <path fill="#C43E1C" d="M12 74h32c2.2091 0 4-1.7909 4-4V38c0-2.2091-1.7909-4-4-4H12c-2.2091 0-4 1.7909-4 4v32c0 2.2091 1.7909 4 4 4z"/>
            <path d="M29.8541 42c2.9554 0 5.2196.6626 6.7895 1.9849C38.2145 45.3081 39 47.2246 39 49.7332c0 1.6109-.3888 3.0433-1.1653 4.2971-.7765 1.2548-1.8814 2.2299-3.3134 2.9262C33.0892 57.6518 31.429 58 29.5426 58H24.999v9H20V42h9.8541zm-4.855 12h3.9666c1.5464 0 2.7144-.3491 3.5051-1.0453.7897-.6972 1.1841-1.715 1.1841-3.0536 0-2.6004-1.5133-3.9011-4.5416-3.9011h-4.1142v8z"/>
          </svg>)}
          
          {postDoc && ((splitFileName(postDoc.name).extension == "xls" || splitFileName(postDoc.name).extension == "xlsx") && <svg style={{opacity: fileUploaded ? "1" : "0.2"}} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 96 96" fill="#FFF" strokeMiterlimit="10" strokeWidth="2">
            <path stroke="#979593" d="M67.1716,7H27c-1.1046,0-2,0.8954-2,2v78 c0,1.1046,0.8954,2,2,2h58c1.1046,0,2-0.8954,2-2V26.8284c0-0.5304-0.2107-1.0391-0.5858-1.4142L68.5858,7.5858 C68.2107,7.2107,67.702,7,67.1716,7z"/>
            <path fill="none" stroke="#979593" d="M67,7v18c0,1.1046,0.8954,2,2,2h18"/>
            <path fill="#C8C6C4" d="M51 61H41v-2h10c.5523 0 1 .4477 1 1l0 0C52 60.5523 51.5523 61 51 61zM51 55H41v-2h10c.5523 0 1 .4477 1 1l0 0C52 54.5523 51.5523 55 51 55zM51 49H41v-2h10c.5523 0 1 .4477 1 1l0 0C52 48.5523 51.5523 49 51 49zM51 43H41v-2h10c.5523 0 1 .4477 1 1l0 0C52 42.5523 51.5523 43 51 43zM51 67H41v-2h10c.5523 0 1 .4477 1 1l0 0C52 66.5523 51.5523 67 51 67zM79 61H69c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C80 60.5523 79.5523 61 79 61zM79 67H69c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C80 66.5523 79.5523 67 79 67zM79 55H69c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C80 54.5523 79.5523 55 79 55zM79 49H69c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C80 48.5523 79.5523 49 79 49zM79 43H69c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C80 42.5523 79.5523 43 79 43zM65 61H55c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C66 60.5523 65.5523 61 65 61zM65 67H55c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C66 66.5523 65.5523 67 65 67zM65 55H55c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C66 54.5523 65.5523 55 65 55zM65 49H55c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C66 48.5523 65.5523 49 65 49zM65 43H55c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1l0 0C66 42.5523 65.5523 43 65 43z"/>
            <path fill="#107C41" d="M12,74h32c2.2091,0,4-1.7909,4-4V38c0-2.2091-1.7909-4-4-4H12c-2.2091,0-4,1.7909-4,4v32 C8,72.2091,9.7909,74,12,74z"/>
            <path d="M16.9492,66l7.8848-12.0337L17.6123,42h5.8115l3.9424,7.6486c0.3623,0.7252,0.6113,1.2668,0.7471,1.6236 h0.0508c0.2617-0.58,0.5332-1.1436,0.8164-1.69L33.1943,42h5.335l-7.4082,11.9L38.7168,66H33.041l-4.5537-8.4017 c-0.1924-0.3116-0.374-0.6858-0.5439-1.1215H27.876c-0.0791,0.2684-0.2549,0.631-0.5264,1.0878L22.6592,66H16.9492z"/>
          </svg>)}
          {postDoc && (splitFileName(postDoc.name).extension == "txt" && <svg style={{opacity: fileUploaded ? "1" : "0.2"}} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 96 96">
            <path fill="#FFF" d="M60.9579,8h-42.688C17.5685,8,17,8.5685,17,9.2698v77.4603C17,87.4315,17.5685,88,18.2698,88h59.6825 c0.7013,0,1.2698-0.5685,1.2698-1.2698V26.2643c0-0.7858-0.3122-1.5395-0.8678-2.0951L63.053,8.8678 C62.4974,8.3122,61.7437,8,60.9579,8z"/>
            <path fill="#979593" d="M79.1211,24.707L61.293,6.8789C60.7266,6.312,59.9736,6,59.1719,6H19c-1.6543,0-3,1.3457-3,3v78 c0,1.6543,1.3457,3,3,3h58c1.6543,0,3-1.3457,3-3V26.8281C80,26.0273,79.6875,25.2739,79.1211,24.707z M60,8.4141L77.5857,26H61 c-0.5518,0-1-0.4482-1-1V8.4141z M77,88H19c-0.5518,0-1-0.4482-1-1V9c0-0.5518,0.4482-1,1-1h39v17c0,1.6543,1.3457,3,3,3h17v59 C78,87.5518,77.5518,88,77,88z"/>
            <path fill="#C8C6C4" d="M71 61H25c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h46c.5523 0 1 .4477 1 1l0 0C72 60.5523 71.5523 61 71 61zM71 55H25c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h46c.5523 0 1 .4477 1 1l0 0C72 54.5523 71.5523 55 71 55zM71 49H25c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h46c.5523 0 1 .4477 1 1l0 0C72 48.5523 71.5523 49 71 49zM71 43H25c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h46c.5523 0 1 .4477 1 1l0 0C72 42.5523 71.5523 43 71 43zM71 67H25c-.5523 0-1-.4477-1-1l0 0c0-.5523.4477-1 1-1h46c.5523 0 1 .4477 1 1l0 0C72 66.5523 71.5523 67 71 67z"/>
          </svg>)}
          {postDoc && ((splitFileName(postDoc.name).extension == "png" || splitFileName(postDoc.name).extension == "jpeg" || splitFileName(postDoc.name).extension == "jpg") && <svg  style={{opacity: fileUploaded ? "1" : "0.2"}}  version="1.1"  xmlns="http://www.w3.org/2000/svg"  xmlnsXlink="http://www.w3.org/1999/xlink"  width={400}  height={400}  viewBox="0, 0, 400,400">  <g id="svgg">    <path      id="path0"      d="M32.591 189.200 C 32.591 206.690,32.640 213.845,32.700 205.100 C 32.760 196.355,32.760 182.045,32.700 173.300 C 32.640 164.555,32.591 171.710,32.591 189.200 M79.095 199.749 C 75.437 201.282,75.597 201.135,54.499 222.403 C 43.443 233.548,33.948 242.907,33.399 243.201 L 32.400 243.735 32.400 273.668 C 32.400 293.356,32.537 303.600,32.800 303.600 C 33.020 303.600,33.200 303.808,33.200 304.062 C 33.200 304.317,33.920 305.231,34.800 306.093 C 35.680 306.956,36.400 307.918,36.400 308.231 C 36.400 308.933,37.049 308.980,37.367 308.300 C 37.550 307.907,37.651 307.912,37.841 308.323 C 38.295 309.308,194.586 308.528,196.404 307.531 C 197.676 306.833,198.877 305.355,199.669 303.514 C 200.150 302.394,200.262 268.305,199.787 267.506 C 197.944 264.405,154.414 221.845,151.820 220.608 C 144.212 216.980,138.649 218.560,130.326 226.714 C 127.536 229.447,125.043 231.614,124.786 231.529 C 124.529 231.443,117.543 224.608,109.260 216.339 C 91.695 198.804,92.062 199.072,85.400 198.891 C 81.924 198.797,81.098 198.909,79.095 199.749 M32.667 232.667 C 32.520 232.813,32.422 233.938,32.449 235.167 L 32.498 237.400 32.843 235.028 C 33.192 232.640,33.157 232.176,32.667 232.667 "      stroke="none"      fill="#2c76b9"      fillRule="evenodd"    />    <path      id="path1"      d="M106.514 25.606 C 104.558 26.475,102.000 28.675,102.000 29.488 C 102.000 29.796,101.858 29.960,101.685 29.852 C 101.512 29.745,101.136 30.230,100.851 30.929 C 100.566 31.628,100.165 32.560,99.959 33.000 C 99.732 33.486,99.628 54.726,99.693 87.200 L 99.800 140.600 103.894 140.714 L 107.988 140.828 108.094 88.181 L 108.200 35.534 109.475 34.395 C 111.369 32.703,108.137 32.760,194.600 32.884 L 275.000 33.000 275.208 69.600 C 275.322 89.730,275.565 106.650,275.747 107.200 C 277.190 111.542,279.770 114.311,283.686 115.721 C 284.645 116.066,294.945 116.249,321.800 116.397 L 358.600 116.600 358.701 239.795 C 358.811 374.761,358.988 364.567,356.504 366.251 C 355.395 367.004,117.647 367.722,112.475 366.988 C 111.394 366.835,110.273 366.318,109.475 365.605 L 108.200 364.466 108.089 336.635 L 107.979 308.804 147.089 308.700 L 186.200 308.596 143.533 308.498 C 120.066 308.444,100.581 308.509,100.233 308.643 C 99.496 308.925,99.245 365.750,99.974 367.105 C 100.179 367.487,100.578 368.372,100.859 369.071 C 101.140 369.770,101.512 370.255,101.685 370.148 C 101.858 370.040,102.000 370.204,102.000 370.512 C 102.000 371.359,104.590 373.538,106.643 374.418 C 108.439 375.188,110.326 375.200,233.358 375.200 L 358.250 375.200 360.225 374.236 C 363.660 372.560,366.800 368.715,366.800 366.186 C 366.800 365.670,366.980 365.136,367.200 365.000 C 367.755 364.657,367.755 109.200,367.200 109.200 C 366.980 109.200,366.800 108.786,366.800 108.280 C 366.800 107.226,365.947 105.208,365.500 105.203 C 365.335 105.201,365.200 104.920,365.200 104.577 C 365.200 103.534,288.021 26.622,285.990 25.641 L 284.250 24.800 196.225 24.828 C 111.078 24.856,108.145 24.881,106.514 25.606 M320.317 71.717 C 340.401 91.801,356.705 108.361,356.550 108.517 C 355.886 109.181,286.998 108.837,285.647 108.163 C 282.828 106.757,283.012 109.248,282.891 70.829 C 282.786 37.246,282.820 35.200,283.488 35.200 C 283.661 35.200,300.234 51.633,320.317 71.717 M200.546 275.000 C 200.547 277.200,200.614 278.049,200.695 276.887 C 200.776 275.724,200.776 273.924,200.693 272.887 C 200.611 271.849,200.545 272.800,200.546 275.000 M33.300 305.357 C 33.685 305.649,34.000 306.028,34.000 306.198 C 34.000 306.517,35.899 308.400,36.221 308.400 C 36.319 308.400,36.400 308.238,36.400 308.040 C 36.400 307.508,33.595 304.798,33.060 304.813 C 32.807 304.820,32.915 305.065,33.300 305.357 M196.200 307.627 C 195.540 308.050,195.205 308.397,195.456 308.398 C 195.706 308.399,196.336 308.046,196.856 307.613 C 198.045 306.623,197.759 306.629,196.200 307.627 "      stroke="none"      fill="#939396"      fillRule="evenodd"    />    <path      id="path2"      d="M110.600 34.083 C 108.755 35.141,108.826 32.982,108.813 88.100 L 108.800 140.400 151.054 140.400 C 196.936 140.400,195.223 140.316,198.015 142.706 C 200.736 145.035,200.800 145.404,200.800 158.844 L 200.800 170.791 265.833 170.895 L 330.866 171.000 332.033 172.306 C 333.610 174.072,333.610 175.928,332.033 177.694 L 330.866 179.000 265.825 179.105 L 200.784 179.209 200.892 187.505 L 201.000 195.800 265.800 195.903 L 330.600 196.005 331.800 196.965 C 332.856 197.809,333.000 198.173,333.000 200.000 C 333.000 201.827,332.856 202.191,331.800 203.035 L 330.600 203.995 265.800 204.097 L 201.000 204.200 200.892 212.495 L 200.784 220.791 265.825 220.895 L 330.866 221.000 332.033 222.306 C 333.610 224.072,333.610 225.928,332.033 227.694 L 330.866 229.000 265.954 229.105 C 214.886 229.187,200.974 229.315,200.727 229.705 C 200.360 230.283,200.284 244.432,200.643 245.367 C 200.863 245.941,206.972 246.000,265.743 246.002 L 330.600 246.004 331.800 246.964 C 332.856 247.809,333.000 248.174,333.000 250.000 C 333.000 251.826,332.856 252.191,331.800 253.036 L 330.600 253.996 265.743 253.998 C 206.972 254.000,200.863 254.059,200.643 254.633 C 200.319 255.476,200.387 266.519,200.730 268.800 L 201.000 270.600 265.933 270.800 L 330.866 271.000 332.033 272.306 C 333.610 274.072,333.610 275.928,332.033 277.694 L 330.866 279.000 265.933 279.200 L 201.000 279.400 200.800 291.400 L 200.600 303.400 199.510 305.255 C 198.910 306.275,197.775 307.490,196.987 307.955 L 195.554 308.800 152.177 308.800 L 108.800 308.800 108.813 336.500 C 108.826 365.768,108.773 364.922,110.674 365.935 C 111.332 366.286,141.541 366.400,233.474 366.398 L 355.400 366.396 356.600 365.436 L 357.800 364.476 357.800 240.738 L 357.800 117.000 321.000 116.800 C 284.465 116.601,284.187 116.594,282.351 115.745 C 278.942 114.169,277.063 111.982,275.251 107.481 C 274.928 106.680,274.800 96.028,274.800 69.981 L 274.800 33.600 193.100 33.612 C 132.404 33.621,111.194 33.742,110.600 34.083 M283.600 70.682 L 283.600 105.555 284.565 106.678 L 285.531 107.800 320.401 107.907 C 345.511 107.983,355.230 107.891,355.125 107.575 C 355.005 107.216,316.113 68.160,290.027 42.205 L 283.600 35.809 283.600 70.682 M140.800 165.372 C 125.280 169.691,125.276 191.877,140.794 196.110 C 144.913 197.234,147.947 196.863,152.772 194.646 C 157.109 192.654,160.805 186.262,160.796 180.772 C 160.778 170.291,150.784 162.594,140.800 165.372 "      stroke="none"      fill="#fbfbfb"      fillRule="evenodd"    />    <path      id="path3"      d="M111.378 33.227 C 110.706 33.422,109.716 34.051,109.178 34.623 L 108.200 35.664 108.094 88.023 L 107.988 140.382 108.894 140.601 C 109.392 140.721,128.790 140.769,152.000 140.708 L 194.200 140.596 151.500 140.498 L 108.800 140.400 108.813 88.100 C 108.826 32.708,108.744 35.093,110.674 34.065 C 111.330 33.716,131.883 33.600,193.174 33.600 L 274.800 33.600 274.800 69.981 C 274.800 96.028,274.928 106.680,275.251 107.481 C 277.063 111.982,278.942 114.169,282.351 115.745 C 284.187 116.594,284.465 116.601,321.000 116.800 L 357.800 117.000 357.800 240.738 L 357.800 364.476 356.600 365.436 L 355.400 366.396 233.474 366.398 C 141.541 366.400,111.332 366.286,110.674 365.935 C 108.773 364.922,108.826 365.768,108.813 336.500 C 108.804 317.834,108.666 308.800,108.389 308.800 C 108.112 308.800,108.015 317.796,108.089 336.633 L 108.200 364.466 109.475 365.605 C 110.273 366.318,111.394 366.835,112.475 366.988 C 117.647 367.722,355.395 367.004,356.504 366.251 C 358.988 364.567,358.811 374.761,358.701 239.795 L 358.600 116.600 321.800 116.397 C 294.945 116.249,284.645 116.066,283.686 115.721 C 279.770 114.311,277.190 111.542,275.747 107.200 C 275.565 106.650,275.322 89.730,275.208 69.600 L 275.000 33.000 193.800 32.936 C 147.382 32.899,112.077 33.024,111.378 33.227 M282.979 35.711 C 282.871 35.992,282.832 51.795,282.891 70.829 C 283.012 109.248,282.828 106.757,285.647 108.163 C 286.998 108.837,355.886 109.181,356.550 108.517 C 356.837 108.229,284.062 35.200,283.488 35.200 C 283.316 35.200,283.087 35.430,282.979 35.711 M325.717 77.869 C 341.811 93.967,355.045 107.335,355.125 107.575 C 355.230 107.891,345.511 107.983,320.401 107.907 L 285.531 107.800 284.565 106.678 L 283.600 105.555 283.600 70.682 L 283.600 35.809 290.027 42.205 C 293.562 45.722,309.623 61.771,325.717 77.869 M200.540 167.200 C 200.540 169.070,200.609 169.835,200.693 168.900 C 200.777 167.965,200.777 166.435,200.693 165.500 C 200.609 164.565,200.540 165.330,200.540 167.200 M200.646 178.895 C 200.512 183.353,200.311 203.020,200.198 222.600 C 200.085 242.180,199.896 259.820,199.776 261.800 C 199.628 264.255,199.750 266.283,200.161 268.177 C 200.721 270.767,200.767 297.040,200.220 302.533 C 200.136 303.376,200.187 303.946,200.334 303.800 C 200.480 303.654,200.690 298.104,200.800 291.467 L 201.000 279.400 265.933 279.200 L 330.866 279.000 332.033 277.694 C 332.847 276.783,333.200 275.968,333.200 275.000 C 333.200 274.032,332.847 273.217,332.033 272.306 L 330.866 271.000 265.933 270.800 L 201.000 270.600 200.730 268.800 C 200.387 266.519,200.319 255.476,200.643 254.633 C 200.863 254.059,206.972 254.000,265.743 253.998 L 330.600 253.996 331.800 253.036 C 332.856 252.191,333.000 251.826,333.000 250.000 C 333.000 248.174,332.856 247.809,331.800 246.964 L 330.600 246.004 265.743 246.002 C 206.972 246.000,200.863 245.941,200.643 245.367 C 200.284 244.432,200.360 230.283,200.727 229.705 C 200.974 229.315,214.886 229.187,265.954 229.105 L 330.866 229.000 332.033 227.694 C 333.610 225.928,333.610 224.072,332.033 222.306 L 330.866 221.000 265.825 220.895 L 200.784 220.791 200.892 212.495 L 201.000 204.200 265.800 204.097 L 330.600 203.995 331.800 203.035 C 332.856 202.191,333.000 201.827,333.000 200.000 C 333.000 198.173,332.856 197.809,331.800 196.965 L 330.600 196.005 265.800 195.903 L 201.000 195.800 200.892 187.505 L 200.784 179.209 265.825 179.105 L 330.866 179.000 332.033 177.694 C 332.847 176.783,333.200 175.968,333.200 175.000 C 333.200 174.032,332.847 173.217,332.033 172.306 L 330.866 171.000 265.877 170.895 L 200.888 170.791 200.646 178.895 M128.934 180.800 C 128.934 182.450,129.005 183.125,129.091 182.300 C 129.178 181.475,129.178 180.125,129.091 179.300 C 129.005 178.475,128.934 179.150,128.934 180.800 M156.181 192.100 L 154.600 193.800 156.300 192.219 C 157.881 190.748,158.184 190.400,157.881 190.400 C 157.816 190.400,157.051 191.165,156.181 192.100 M147.800 196.400 C 147.296 196.617,147.222 196.744,147.600 196.744 C 147.930 196.744,148.560 196.589,149.000 196.400 C 149.504 196.183,149.578 196.056,149.200 196.056 C 148.870 196.056,148.240 196.211,147.800 196.400 M198.909 305.500 C 198.519 306.105,197.840 306.935,197.400 307.345 C 196.607 308.084,196.608 308.086,197.519 307.545 C 198.391 307.028,200.337 304.400,199.849 304.400 C 199.722 304.400,199.299 304.895,198.909 305.500 M191.000 308.400 L 185.800 308.637 190.876 308.718 C 193.921 308.767,196.052 308.640,196.200 308.400 C 196.336 308.180,196.392 308.037,196.324 308.082 C 196.256 308.127,193.860 308.270,191.000 308.400 "      stroke="none"      fill="#cac2c2"      fillRule="evenodd"    />    <path      id="path4"      d="M36.124 140.955 C 35.862 141.263,35.772 141.653,35.924 141.821 C 36.076 141.990,35.878 142.012,35.485 141.870 C 35.037 141.709,34.685 141.835,34.542 142.207 C 34.417 142.533,34.064 142.800,33.757 142.800 C 33.451 142.800,33.200 142.991,33.200 143.224 C 33.200 143.457,33.393 143.528,33.630 143.382 C 33.866 143.236,33.822 143.495,33.533 143.958 C 33.244 144.421,32.916 144.800,32.804 144.800 C 32.692 144.800,32.600 164.583,32.600 188.762 C 32.600 214.529,32.748 232.632,32.958 232.502 C 33.158 232.379,33.205 232.794,33.066 233.441 C 32.430 236.384,32.269 243.600,32.839 243.605 C 33.147 243.607,42.802 234.149,54.293 222.587 C 78.813 197.915,77.400 199.000,85.000 199.000 C 92.067 199.000,91.450 198.559,109.260 216.339 C 117.543 224.608,124.529 231.443,124.786 231.529 C 125.043 231.614,127.536 229.447,130.326 226.714 C 138.649 218.560,144.212 216.980,151.820 220.608 C 154.242 221.763,197.696 264.118,199.570 267.151 C 199.698 267.359,199.803 266.150,199.802 264.465 C 199.801 262.779,199.939 246.280,200.110 227.800 C 200.280 209.320,200.517 183.690,200.635 170.844 C 200.865 145.964,200.891 146.385,198.913 143.696 C 196.676 140.656,204.404 140.939,115.800 140.652 C 48.229 140.434,36.530 140.478,36.124 140.955 M150.140 165.547 C 164.433 170.262,164.490 191.172,150.222 195.996 C 139.721 199.547,128.809 191.803,128.809 180.800 C 128.809 169.780,139.594 162.068,150.140 165.547 M200.000 269.310 C 200.000 270.103,200.169 270.857,200.376 270.985 C 200.601 271.124,200.659 270.609,200.520 269.709 C 200.210 267.700,200.000 267.539,200.000 269.310 M200.267 279.067 C 200.120 279.213,200.039 284.298,200.088 290.367 L 200.175 301.400 200.388 290.200 C 200.623 277.805,200.632 278.701,200.267 279.067 M199.738 303.200 C 199.507 304.066,199.458 304.688,199.628 304.583 C 199.982 304.364,200.558 302.025,200.317 301.784 C 200.230 301.697,199.969 302.334,199.738 303.200 "      stroke="none"      fill="#64c4ec"      fillRule="evenodd"    />  </g></svg>)}

        </div>
        <div className="my-post-attachment-text-container">
          <h3>{postDoc && splitFileName(postDoc.name).name}</h3>
          <p>{postDoc && splitFileName(postDoc.name).extension.toUpperCase()} File<br />{postDoc && formatBytes(postDoc.size)}</p>
        </div>
      </div>
    </>
    
  );
}

export default MyAttachment;
